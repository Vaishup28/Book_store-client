{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Stack\\\\Mern-project\\\\Phase-5\\\\client\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(null);\n  const login = (token, userData) => {\n    localStorage.setItem(\"token\", token);\n    setToken(token);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n  useEffect(() => {\n    if (token) {}\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      logout,\n      isLoggedIn: !!token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Il+qBTDhx18d27pxg7d1xY+/STA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","login","userData","setItem","logout","removeItem","Provider","value","isLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/MERN Stack/Mern-project/Phase-5/client/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem(\"token\", token);\r\n    setToken(token);\r\n    setUser(userData); \r\n  };\r\n  \r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      \r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, user, login, logout, isLoggedIn: !!token }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAMU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EAC/E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,KAAK,GAAGA,CAACN,KAAK,EAAEO,QAAQ,KAAK;IACjCL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;IACpCC,QAAQ,CAACD,KAAK,CAAC;IACfK,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCT,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,EAAE,CAEX;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEI,IAAI;MAAEE,KAAK;MAAEG,MAAM;MAAEI,UAAU,EAAE,CAAC,CAACb;IAAM,CAAE;IAAAF,QAAA,EAC9EA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA3BWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA6BzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7B,UAAU,CAACK,WAAW,CAAC;AAAA;AAACwB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}