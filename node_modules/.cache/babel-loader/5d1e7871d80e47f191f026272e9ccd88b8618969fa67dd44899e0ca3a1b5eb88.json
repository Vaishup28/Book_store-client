{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Stack\\\\Mern-project\\\\Phase-5\\\\client\\\\src\\\\Context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/Context/CartContext.js\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  // Cart state\n  const [cartItems, setCartItems] = useState([]);\n\n  // Add item to cart (including updating quantity if item already exists)\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(i => i.id === item.id);\n      if (existingItem) {\n        return prevItems.map(i => i.id === item.id ? {\n          ...i,\n          quantity: i.quantity + 1\n        } : i);\n      } else {\n        return [...prevItems, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = itemId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Get total price\n  const getTotal = () => {\n    return cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      getTotal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","addToCart","item","prevItems","existingItem","find","i","id","map","quantity","removeFromCart","itemId","filter","getTotal","reduce","sum","price","toFixed","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/MERN Stack/Mern-project/Phase-5/client/src/Context/CartContext.js"],"sourcesContent":["// src/Context/CartContext.js\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\n// Create context\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use the cart\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  // Cart state\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  // Add item to cart (including updating quantity if item already exists)\r\n  const addToCart = (item) => {\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find((i) => i.id === item.id);\r\n      if (existingItem) {\r\n        return prevItems.map((i) =>\r\n          i.id === item.id ? { ...i, quantity: i.quantity + 1 } : i\r\n        );\r\n      } else {\r\n        return [...prevItems, { ...item, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== itemId));\r\n  };\r\n\r\n  // Get total price\r\n  const getTotal = () => {\r\n    return cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, getTotal }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFWD,OAAO;AAIpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMW,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAEG,SAAS,IAAK;MAC1B,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAC5D,IAAIH,YAAY,EAAE;QAChB,OAAOD,SAAS,CAACK,GAAG,CAAEF,CAAC,IACrBA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEG,QAAQ,EAAEH,CAAC,CAACG,QAAQ,GAAG;QAAE,CAAC,GAAGH,CAC1D,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,SAAS,EAAE;UAAE,GAAGD,IAAI;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACjD;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjCX,YAAY,CAAEG,SAAS,IAAKA,SAAS,CAACS,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKI,MAAM,CAAC,CAAC;EAC7E,CAAC;;EAED;EACA,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAOd,SAAS,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEb,IAAI,KAAKa,GAAG,GAAGb,IAAI,CAACc,KAAK,GAAGd,IAAI,CAACO,QAAQ,EAAE,CAAC,CAAC,CAACQ,OAAO,CAAC,CAAC,CAAC;EACxF,CAAC;EAED,oBACEzB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,SAAS;MAAEE,SAAS;MAAES,cAAc;MAAEG;IAAS,CAAE;IAAAhB,QAAA,EAC7EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,GAAA,CAjCWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}