{"ast":null,"code":"var _jsxFileName = \"C:\\\\MERN Stack\\\\Mern-project\\\\Phase-5\\\\client\\\\src\\\\Pages\\\\BookByCity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookByCity = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [book, setBook] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch all restaurants to extract unique cities\n    axios.get(`http://localhost:8080/book`).then(response => {\n      if (response.data && Array.isArray(response.data)) {\n        const uniqueCities = [...new Set(response.data.map(r => r.city))];\n        setCities(uniqueCities);\n      }\n    }).catch(error => console.error(\"Error fetching cities:\", error));\n  }, []);\n  const handleCityChange = event => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n    axios.get(`http://localhost:8080/cityResponse/${city}`).then(response => {\n      if (response.data.cityResponse && Array.isArray(response.data.cityResponse)) {\n        setBook(response.data.cityResponse);\n        navigate(`/book/cityResponse/${city}`);\n      } else {\n        setBook([]);\n      }\n    }).catch(error => {\n      setError(\"Failed to fetch books.\");\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCityChange,\n        value: selectedCity,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 6\n  }, this);\n};\n_s(BookByCity, \"73bFcU+UWQ0v5E6JlFIJa8WSDSw=\", false, function () {\n  return [useNavigate];\n});\n_c = BookByCity;\nexport default BookByCity;\n;\nvar _c;\n$RefreshReg$(_c, \"BookByCity\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","BookByCity","_s","cities","setCities","selectedCity","setSelectedCity","book","setBook","loading","setLoading","error","setError","navigate","get","then","response","data","Array","isArray","uniqueCities","Set","map","r","city","catch","console","handleCityChange","event","target","value","cityResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["C:/MERN Stack/Mern-project/Phase-5/client/src/Pages/BookByCity.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../Styles/App.css\";\n\n\nconst BookByCity = () => {\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [book, setBook] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch all restaurants to extract unique cities\n    axios\n      .get(`http://localhost:8080/book`)\n      .then((response) => {\n        if (response.data && Array.isArray(response.data)) {\n          const uniqueCities = [\n            ...new Set(response.data.map((r) => r.city)),\n          ];\n          setCities(uniqueCities);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching cities:\", error));\n  }, []);\n\n  const handleCityChange = (event) => {\n    const city = event.target.value;\n    setSelectedCity(city);\n    setLoading(true);\n    setError(null);\n\n    axios\n      .get(`http://localhost:8080/cityResponse/${city}`)\n      .then((response) => {\n        if (response.data.cityResponse && Array.isArray(response.data.cityResponse)) {\n          setBook(response.data.cityResponse);\n          navigate(`/book/cityResponse/${city}`);\n        } else {\n          setBook([]);\n        }\n      })\n      .catch((error) => {\n        setError(\"Failed to fetch books.\");\n        setLoading(false);\n      });\n  };\n\n  return (\n   \n     <div>\n      <div>\n        <label>Select a City: </label>\n        <select onChange={handleCityChange} value={selectedCity}>\n          <option value=\"\">-- Select --</option>\n          {cities.map((city, index) => (\n            <option key={index} value={city}>\n              {city}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default BookByCity;;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}